@model XL.CHC.Web.Models.WorkerViewModel
@{
    ViewBag.Title = "编辑工人";
    ViewBag.CurrentPage = "WorkManage_WorkerManage_CreateOrUpdate";
}
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue" id="form_wizard_1">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i> 编辑工人
                </div>
                <div class="actions">
                    <a href="/Worker/Index" class="btn blue btn-sm">
                        <i class="fa fa-mail-reply"></i> 返回
                    </a>
                </div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                @using (Html.BeginForm("CreateOrUpdate", "Worker", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
                {
                    <div class="form-body">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.Id)
                        <div class="form-group">
                            <label class="col-md-3 control-label">工人名字:</label>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.Worker_Name, new { @class = "form-control" })
                                <span class="help-block font-red">
                                    @Html.ValidationMessageFor(x => x.Worker_Name)
                                </span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">身份证号:</label>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.Worker_ID, new { @class = "form-control" })
                                <span class="help-block font-red">
                                    @Html.ValidationMessageFor(x => x.Worker_ID)
                                </span>
                            </div>
                        </div>
                        
                        @*<div class="form-group">
                            <label class="col-md-3 control-label">工位:</label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => Model.WorkStations_Array, Model.WorkStations, new { @class = "ui-multiselect", @multiple = "multiple" })
                            </div>
                        </div>*@
                    </div>
                    <div class="form-actions fluid">
                        <div class="col-md-offset-3 col-md-9">
                            <button type="submit" class="btn blue">提交</button>
                            <a href="@Url.Action("Index", "Worker" )" class="btn default">返回工人列表</a>
                        </div>
                    </div>
                }
                <!-- END FORM-->
            </div>
        </div>
    </div>
</div>
<script>
    jQuery(document).ready(function ()
    {
        $('#WorkStations_Array').multiSelect({
            selectableHeader: addMultiSelectFilter("txt_ha_left"),//"<input type='text' class='form-control' autocomplete='off' placeholder='键入搜索条件' >",
            selectionHeader: addMultiSelectFilter("txt_ha_right"),//"<input type='text' class='form-control' autocomplete='off' placeholder='键入搜索条件' >",
            afterInit: funSearchSelect,
            afterSelect: function (values)
            {
                $("#txt_ha_left").val("");
                this.qs1.cache();
                this.qs2.cache();
            },
            afterDeselect: function ()
            {
                $("#txt_ha_right").val("");
                this.qs1.cache();
                this.qs2.cache();
            }
        });
    });

    var funSearchSelect = function (ms)
    {
        var that = this,
        $selectableSearch = that.$selectableUl.prev(),
        $selectionSearch = that.$selectionUl.prev(),
        selectableSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selectable:not(.ms-selected)',
        selectionSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selection.ms-selected';

        that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
        .on('keydown', function (e)
        {
            if (e.which === 40)
            {
                that.$selectableUl.focus();
                return false;
            }
        });

        that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
        .on('keydown', function (e)
        {
            if (e.which == 40)
            {
                that.$selectionUl.focus();
                return false;
            }
        });

    }

    function addMultiSelectFilter(obj)
    {
        return "<input type='text' id='" + obj + "' class='form-control' autocomplete='off' placeholder='键入搜索条件' >";
    }
</script>